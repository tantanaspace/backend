"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
import logging
import environ
import dj_database_url
import sentry_sdk

from pathlib import Path
from datetime import timedelta
from django.utils.translation import gettext_lazy as _
from firebase_admin import initialize_app, credentials
from sentry_sdk.integrations.django import DjangoIntegration


from core.jazzmin_conf import *  # noqa
from utils.triggers import sentry_before_send_trigger

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# READING ENV
env = environ.Env()
env.read_env(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG")

ALLOWED_HOSTS = ["*"]

# SENTRY-SDK
sentry_sdk.init(
    dsn="https://49819acd88a7dbeb4cbe7ec54bb2aacd@o4509604595957760.ingest.us.sentry.io/4509604912693248",
    # Add data like request headers and IP for users,
    # see https://docs.sentry.io/platforms/python/data-management/data-collected/ for more info
    send_default_pii=True,
    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for tracing.
    traces_sample_rate=1.0,
    # Set profile_session_sample_rate to 1.0 to profile 100%
    # of profile sessions.
    profile_session_sample_rate=1.0,
    # Set profile_lifecycle to "trace" to automatically
    # run the profiler on when there is an active transaction
    profile_lifecycle="trace",
    integrations=[DjangoIntegration()],
    before_send=sentry_before_send_trigger,


)
SENTRY_BOT_TOKEN = env.str('SENTRY_BOT_TOKEN')
SENTRY_CHAT_ID = env.str('SENTRY_CHAT_ID')
SENTRY_THREAD_ID = env.str('SENTRY_THREAD_ID')

# Application definition
DJANGO_APPS = [
    "jazzmin",
    # "django.contrib.gis",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

CUSTOM_APPS = [
    "apps.common",
    "apps.users",
    "apps.venues",
    "apps.visits",
    "apps.orders",
    "apps.notifications",
    # "apps.payments",
]

THIRD_PARTY_APPS = [
    "rest_framework",
    'django_filters',
    "drf_yasg",
    "corsheaders",
    "modeltranslation",
    "fcm_django",
    'nplusone.ext.django',
    'django_celery_beat',
    'versatileimagefield',
    # 'leaflet',
]

INSTALLED_APPS = DJANGO_APPS + CUSTOM_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'nplusone.ext.django.NPlusOneMiddleware',
]

# Root url conf
ROOT_URLCONF = "core.urls"

# Auth user model
AUTH_USER_MODEL = 'users.User'

# Wsgi application
WSGI_APPLICATION = "core.wsgi.application"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


DATABASES = {
    'default': dj_database_url.config(),
}
DATABASES["default"]["ATOMIC_REQUESTS"] = False
DATABASES["default"]["DISABLE_SERVER_SIDE_CURSORS"] = False
DATABASES["default"]["ENGINE"] = env.str("DB_ENGINE", "django.db.backends.postgresql")

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "static"
STATICFILES_DIRS = (BASE_DIR / "staticfiles",)

MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media"

DELETE_FILES_ON_MODEL_DELETE = True

# TEMPLATES
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# CACHES
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"{env.str('REDIS_URL', 'redis://localhost:6379/0')}",
        "KEY_PREFIX": "tantana",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}
REDIS_URL = env.str("REDIS_URL", "redis://redis:6379/0")
REDIS_HOST = env.str("REDIS_HOST", "localhost") 
REDIS_PORT = env.int("REDIS_PORT", 6379)
REDIS_DB = env.int("REDIS_DB", 0)

# DJANGO REST FRAMEWORK
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
    ),
    "DEFAULT_RENDERER_CLASSES": (
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 10,
    "EXCEPTION_HANDLER": "core.exception_handler.custom_exception_handler",
}

# SIMPLE JWT SETTINGS
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=5),
    "REFRESH_TOKEN_LIFETIME": timedelta(hours=24),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": False,
    "UPDATE_LAST_LOGIN": True,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),

    "TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainPairSerializer",
    "TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSerializer",
    "TOKEN_VERIFY_SERIALIZER": "rest_framework_simplejwt.serializers.TokenVerifySerializer",
    "TOKEN_BLACKLIST_SERIALIZER": "rest_framework_simplejwt.serializers.TokenBlacklistSerializer",
    "SLIDING_TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainSlidingSerializer",
    "SLIDING_TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSlidingSerializer",
}

# CELERY CONFIGURATION
CELERY_BROKER_URL = env.str("CELERY_BROKER_URL", "redis://localhost:6379/0")
CELERY_RESULT_BACKEND = env.str("CELERY_BROKER_URL", "redis://localhost:6379/1")

CELERY_TASK_RESULT_EXPIRES = 60 * 60 * 24

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'

CELERY_TIMEZONE = "UTC"

CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60

CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers.DatabaseScheduler'

# CYPHER CONFIGURATION
AES_KEY = env.str("AES_KEY", "")

# RECAPTCHA
RECAPTCHA_PUBLIC_KEY = env.str(
    "RECAPTCHA_PUBLIC_KEY", "6LdlOWYpAAAAAOEsejvu7mT-tYr9PBmMlYbVio7R"
)
RECAPTCHA_PRIVATE_KEY = env.str(
    "RECAPTCHA_PRIVATE_KEY", "6LdlOWYpAAAAAP2nediVlYsjEXrFZpzH4DZlUarQ"
)

# MAIL CONF
EMAIL_BACKEND = env.str('EMAIL_BACKEND', 'django.core.mail.backends.smtp.EmailBackend')
EMAIL_HOST = env.str('EMAIL_HOST', 'smtp.zoho.com')
EMAIL_PORT = env.int('EMAIL_PORT', 465)
EMAIL_USE_TLS = env.bool('EMAIL_USE_TLS', False)
EMAIL_USE_SSL = env.bool('EMAIL_USE_SSL', True)
EMAIL_HOST_USER = env.str('EMAIL_HOST_USER', 'finstransport@movegreen.us')
EMAIL_HOST_PASSWORD = env.str('EMAIL_HOST_PASSWORD', '5cQxudd7jjjd')
DEFAULT_FROM_EMAIL = env.str('DEFAULT_FROM_EMAIL', 'finstransport@movegreen.us')

# NPLUSONE
NPLUSONE_RAISE = False
NPLUSONE_LOGGER = logging.getLogger('nplusone')
NPLUSONE_LOG_LEVEL = logging.DEBUG

# Firebase
FIREBASE_CREDENTIAL_PATH = os.path.join(BASE_DIR, 'apps', 'notifications', 'tantana-firebase.json')
cred = credentials.Certificate(FIREBASE_CREDENTIAL_PATH)
FIREBASE_APP = initialize_app(cred, {
    'projectId': 'tantana-b2316',
})
FCM_DJANGO_SETTINGS = {
    "DEFAULT_FIREBASE_APP": FIREBASE_APP,
    "APP_VERBOSE_NAME": _("Devices"),
    "ONE_DEVICE_PER_USER": False,
    "DELETE_INACTIVE_DEVICES": True,
}
FCM_DJANGO_FCMDEVICE_MODEL = "notifications.CustomFCMDevice"

# CKEDITOR
CKEDITOR_5_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"
CK_EDITOR_5_UPLOAD_FILE_VIEW_NAME = "ck_editor_5_upload_file"
CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': [
            'heading', '|',
            'bold', 'italic', 'underline', 'fontColor', 'fontBackgroundColor', '|',
            'link', 'blockquote', '|',
            'bulletedList', 'numberedList', '|',
            'insertTable', '|',
            'imageUpload', 'mediaEmbed', '|',
            'undo', 'redo'
        ],
        'extraPlugins': [
            'FontColor', 'FontBackgroundColor'
        ],
        "image": {
            "toolbar": [
                "imageStyle:full",
                "imageStyle:side",
                "|",
                "imageTextAlternative"
            ]
        },
    }
}

# SWAGGER
SWAGGER_SETTINGS = {
    'DEFAULT_AUTO_SCHEMA_CLASS': 'core.swagger.AppNameTagAutoSchema',
    "USE_SESSION_AUTH": True,
    "SECURITY_DEFINITIONS": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "description": "Example: **Bearer &lt;your_token&gt;**",
    "DOC_EXPANSION": "none",
    'OPERATIONS_SORTER': 'alpha',
    'TAGS_SORTER': 'alpha',
    'DEFAULT_MODEL_RENDERING': 'model',
    'DEFAULT_INFO': 'config.urls.api_info',
    'DEFAULT_FIELD_INSPECTORS': [
        'drf_yasg.inspectors.CamelCaseJSONFilter',
        'drf_yasg.inspectors.ReferencingSerializerInspector',
        'drf_yasg.inspectors.RelatedFieldInspector',
        'drf_yasg.inspectors.ChoiceFieldInspector',
        'drf_yasg.inspectors.FileFieldInspector',
        'drf_yasg.inspectors.DictFieldInspector',
        'drf_yasg.inspectors.SimpleFieldInspector',
        'drf_yasg.inspectors.StringDefaultFieldInspector',
    ],
}

# MODELTRANSLATION
LANGUAGES = (
    ("en", "English"),
    ("ru", "Russian"),
    ("uz", "Uzbek"),
)
MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'

# todo: use production settings
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = ["*"]

# django-debug-toolbar
DEBUG_TOOLBAR_ENABLED = False


# LEAFLET
LEAFLET_CONFIG = {
    'DEFAULT_CENTER': (39.7, 64.6),
    'DEFAULT_ZOOM': 6,
    'MIN_ZOOM': 2,
    'MAX_ZOOM': 18,
    'SCALE': 'both',
    'ATTRIBUTION_PREFIX': 'Tantana Team',
}


FRONTEND_URL = env.str('FRONTEND_URL', 'https://demo.aslamjon.uz')

# STRIPE SETTINGS
STRIPE_PUBLIC_KEY = env.str('STRIPE_PUBLIC_KEY', 'pk_test_51RoOTXRsurVYutu30fUhk9KraTrf1wRewivhT6bI3eKp3FtNmXBuAppo9sepZiWRREvjnLD1i7gszXvhBQ68kqJc00bUYBA7vb')
STRIPE_SECRET_KEY = env.str('STRIPE_SECRET_KEY', 'sk_test_51RoOTXRsurVYutu3FRnUlsD1OoOvRVJdG66RfXuDKlVZhy9pXHj3XQ3MpiOLzHJkZXn7mQXEoWXDFWYVS8mgWd74006MTaUaP5')
STRIPE_WEBHOOK_SECRET = env.str('STRIPE_WEBHOOK_SECRET', 'whsec_3TKm4Aw8Cdl0S5qqLGqDPLde8M9kJcoX')

# SUBSCRIPTION SETTINGS
SUBSCRIPTION_SETTINGS = {
    'PRORATION_ENABLED': True,
    'TRIAL_PERIOD_DAYS': 14,  # Trial period in days
    'INVOICE_DUE_DAYS': 7,    # Invoice due days
    'RETRY_FAILED_PAYMENTS': True,
    'MAX_RETRY_ATTEMPTS': 3,
}

# Venue synchronization settings
VENUE_SYNC = {
    'GOOGLE_PLACES_API_KEY': env.str('GOOGLE_PLACES_API_KEY', default=''),
    'QUERY': env.str('VENUE_SYNC_QUERY', default='restaurants in Tashkent'),
    'REGION': env.str('VENUE_SYNC_REGION', default='uz'),
    'LANGUAGE': env.str('VENUE_SYNC_LANGUAGE', default='en'),
    'MAX_PHOTOS_PER_PLACE': env.int('VENUE_SYNC_MAX_PHOTOS', default=3),
    'USE_MULTI_SEARCH': env.bool('VENUE_SYNC_USE_MULTI_SEARCH', default=True),
    'COMPANY': {
        'external_id': env.str('VENUE_SYNC_COMPANY_ID', default='google_places_import'),
        'name': env.str('VENUE_SYNC_COMPANY_NAME', default='Google Places Import')
    }
}


ESKIZ_CREDENTIALS = {
    'username': env.str('ESKIZ_USERNAME', default='mirzohid.pm@gmail.com'),
    'secret_key': env.str('ESKIZ_SECRET_KEY', default='9mj0NSIq8FiYqwCN9C3ap0DUWFdS2xV82f51ztZH'),
    'callback_url': env.str('ESKIZ_CALLBACK_URL', default='https://api.tantana.group/api/v1/eskiz-callback/'),
    'from_number': env.str('ESKIZ_FROM_NUMBER', default='4546'),
}